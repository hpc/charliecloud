#!/usr/bin/env python

# If environment variable CH_TEST_OMIT is set, then avoid Dockerfiles that
# seem lengthy. This supports job time limits in Travis CI. See source code
# below for the heuristic.

from __future__ import print_function

import os
import os.path
import sys

mode = sys.argv[1]

print("""\
# Do not edit this file; it's autogenerated.

load common
""")

for path in sys.argv[2:]:
   # NOTE: The following 2x2 matrix has an empty cell 
   (d, f) = os.path.split(path)
   if (f =='Dockerfile' or f == 'dockerpull'):
      tag = os.path.basename(d)
   else:
      tag = os.path.splitext(f)[1][1:] # extension
   assert (tag != "")
   if (f == 'dockerpull'):
      with open(path) as fp: 
         addr = fp.readline().rstrip()
   try:
      if (os.environ["CH_TEST_OMIT"] in tag):
         continue
   except KeyError:
      pass

   if (mode == "build"):
      if (f == "dockerpull"):
         print("""\

@test 'docker pull %(tag)s' {
    sudo docker pull %(addr)s
    sudo docker tag %(addr)s %(tag)s
}

""" % locals())

      else:		# is Dockerfile
         print("""\

@test 'ch-build %(tag)s' {
    ch-build -t %(tag)s --file=%(path)s ..
    docker_ok %(tag)s
}

""" % locals())

      print("""\
@test 'ch-docker2tar %(tag)s' {
    TARBALL=$TARDIR/%(tag)s.tar.gz
    ch-docker2tar %(tag)s $TARDIR
    tarball_ok $TARBALL
}

""" % locals())

   if (mode == "run"):
      print("""\

@test 'ch-tar2dir %(tag)s' {
    TARBALL=$TARDIR/%(tag)s.tar.gz
    IMG=$IMGDIR/%(tag)s
    if [[ -d $IMG && -f $IMG/WEIRD_AL_YANKOVIC ]]; then
        # image exists, remove so we can test new unpack
        rm -Rf --one-file-system $IMG
    fi
    ch-tar2dir $TARBALL $IMG  # new unpack
    image_ok $IMG
    ch-tar2dir $TARBALL $IMG  # overwrite
    image_ok $IMG
}

@test 'ch-run %(tag)s /bin/true' {
    IMG=$IMGDIR/%(tag)s
    ch-run $IMG /bin/true
}

""" % locals())
