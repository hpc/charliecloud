dist: xenial
sudo: required
language: c
compiler: gcc

# This defines a "matrix" of jobs. Each combination of environment variables
# defines a different job. They run in parallel, five at a time.
#
# FIXME: Each job starts with a cold Docker cache, which wastes work heating
# it up in parallel. It would be nice if "make test-build" could be done
# serially before splitting into parallel jobs.
#
#   TARBALL=              # build in Git checkout & use embedded Bats
#   TARBALL=archive       # build from "git archive" tarball & use system Bats
#   TARBALL=export        # build from "make export" tarball & use system Bats
#   TARBALL=export-bats   # build from "make export" tarball & use embedded Bats
#   INSTALL=              # run from build directory
#   INSTALL=yes           # make install to /usr/local, run that one
#
# Additional options:
#
#   PKG_BUILD=yes     # build (but don't test) distribution packages, then exit
#   MINIMAL_DEPS=yes  # test with a minimal dependency set (no fancy tools)
#
env:
# Complete matrix of TARBALL and INSTALL.
  - TARBALL=             INSTALL=
  - TARBALL=             INSTALL=yes
  - TARBALL=archive      INSTALL=
#  - TARBALL=archive      INSTALL=yes
  - TARBALL=export       INSTALL=
  - TARBALL=export       INSTALL=yes
  - TARBALL=export-bats  INSTALL=
#  - TARBALL=export-bats  INSTALL=yes
# Extra conditions
  - TARBALL=        INSTALL=     MINIMAL_DEPS=yes
# One full-scope test. This will finish last by a lot.
# (Disabled because it gives a >10-minute gap in output, so Travis times out.)
#  - TARBALL=        INSTALL=     CH_TEST_SCOPE=full

addons:
  apt:
    sources:
      - sourceline: 'ppa:projectatomic/ppa'
    packages:
# Package version 1.0.0-rc6-1~ubuntu16.04.2~ppa73, current as of 3/21/2019,
# fails with "invalid argument". See issue #398. For now, skip it since a
# working .deb is no longer available.
#      - buildah
#      - cri-o-runc  # runc from Project Atomic PPA, not Ubuntu
      - fakeroot
      - pigz
      - pv
      - python3-pip
      - skopeo

install:
# We need Python 3 because Sphinx 1.8.0 doesn't work right under Python 2 (see
# issue #241). Travis provides images pre-installed with Python 3, but it's in
# a virtualenv and unavailable by default under sudo, in package builds, and
# maybe elsewhere. It's simpler and fast enough to install it with apt-get.
  - if [ -z "$MINIMAL_DEPS" ]; then
      pip3 --version;
      sudo pip3 install sphinx sphinx-rtd-theme;
    fi
# umoci provides a binary build; no appropriate Ubuntu packages AFAICT.
  - if [ -z "$MINIMAL_DEPS" ]; then
      wget -nv https://github.com/openSUSE/umoci/releases/download/v0.4.3/umoci.amd64;
      sudo chmod 755 umoci.amd64;
      sudo mv umoci.amd64 /usr/local/bin/umoci;
      umoci --version;
    fi
# Tests should still pass with only the basics installed.
  - if [ -n "$MINIMAL_DEPS" ]; then
      sudo apt-get purge buildah cri-o-runc pv skopeo;
    fi

before_script:
  - getconf _NPROCESSORS_ONLN
  - free -m
  - df -h
  - df -h /var/tmp
  - export CH_TEST_TARDIR=/var/tmp/tarballs
  - export CH_TEST_IMGDIR=/var/tmp/images
  - export CH_TEST_PERMDIRS='/var/tmp /run'
  - unset JAVA_HOME  # otherwise Spark tries to use host's Java
  - for d in $CH_TEST_PERMDIRS; do sudo test/make-perms-test $d $USER nobody; done
  - sudo usermod --add-subuids 10000-65536 $USER
  - sudo usermod --add-subgids 10000-65536 $USER

script:
  - test/travis.sh

after_script:
  - free -m
  - df -h
