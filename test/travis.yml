dist: xenial
sudo: required
language: c
compiler: gcc

# This defines a "matrix" of jobs. Each combination of environment variables
# defines a different job. They run in parallel, five at a time.
#
# FIXME: Each job starts with a cold Docker cache, which wastes work heating
# it up in parallel. It would be nice if "make test-build" could be done
# serially before splitting into parallel jobs.
#
#   TARBALL=              # build in Git checkout & use embedded Bats
#   TARBALL=archive       # build from "git archive" tarball & use system Bats
#   TARBALL=export        # build from "make export" tarball & use system Bats
#   TARBALL=export-bats   # build from "make export" tarball & use embedded Bats
#   INSTALL=              # run from build directory
#   INSTALL=yes           # make install to /usr/local, run that one
#
# Additional options:
#
#   CH_BUILDER              # which builder to use
#   MINIMAL_DEPS            # test with minimal dependencies (no fancy tools)
#   SUDO_RM_AFTER_BUILD     # remove sudo privileges after build
#   SUDO_AVOID_AFTER_BUILD  # set CH_TEST_DONT_SUDO after build
#
env:
# Complete matrix of TARBALL and INSTALL using Docker.
  - CH_BUILDER=docker        TARBALL=             INSTALL=
  - CH_BUILDER=docker        TARBALL=             INSTALL=yes
  - CH_BUILDER=docker        TARBALL=archive      INSTALL=
# - CH_BUILDER=docker        TARBALL=archive      INSTALL=yes
  - CH_BUILDER=docker        TARBALL=export       INSTALL=
  - CH_BUILDER=docker        TARBALL=export       INSTALL=yes
  - CH_BUILDER=docker        TARBALL=export-bats  INSTALL=
# - CH_BUILDER=docker        TARBALL=export-bats  INSTALL=yes
# Other builders
  - CH_BUILDER=ch-grow       TARBALL= INSTALL=
  - CH_BUILDER=ch-grow       TARBALL= INSTALL= MINIMAL_DEPS=yes
# Extra conditions with Docker
  - CH_BUILDER=docker        TARBALL= INSTALL= MINIMAL_DEPS=yes
  - CH_BUILDER=docker        TARBALL= INSTALL= SUDO_RM_AFTER_BUILD=yes
  - CH_BUILDER=docker        TARBALL= INSTALL= SUDO_AVOID_AFTER_BUILD=yes
# One full-scope test. This will finish last by a lot.
# (Disabled because it gives a >10-minute gap in output, so Travis times out.)
#  - TARBALL=        INSTALL=     CH_TEST_SCOPE=full

addons:
  apt:
    sources:
      - sourceline: 'ppa:projectatomic/ppa'
    packages:
      - python3-pip
      - python3-setuptools

install:
# Install conditional packages.
  - if [ -z "$MINIMAL_DEPS" ]; then
      sudo apt-get install buildah cri-o-runc pigz pv skopeo squashfuse;
    fi
  - if [ "$CH_BUILDER" = ch-grow ]; then
      sudo apt-get install skopeo;
      sudo pip3 install lark-parser;
    fi
# umoci provides a binary build; no appropriate Ubuntu package for Xenial.
  - if [ -z "$MINIMAL_DEPS" ] || [ "$CH_BUILDER" = ch-grow ]; then
      wget -nv https://github.com/openSUSE/umoci/releases/download/v0.4.4/umoci.amd64;
      sudo chmod 755 umoci.amd64;
      sudo mv umoci.amd64 /usr/local/bin/umoci;
      umoci --version;
    fi
# We need Python 3 because Sphinx 1.8.0 doesn't work right under Python 2 (see
# issue #241). Travis provides images pre-installed with Python 3, but it's in
# a virtualenv and unavailable by default under sudo, in package builds, and
# maybe elsewhere. It's simpler and fast enough to install it with apt-get.
  - if [ -z "$MINIMAL_DEPS" ]; then
      sudo pip3 install sphinx sphinx-rtd-theme;
    fi

before_script:
  - getconf _NPROCESSORS_ONLN
  - free -m
  - df -h
  - df -h /var/tmp
  - export CH_TEST_TARDIR=/var/tmp/tarballs
  - export CH_TEST_IMGDIR=/var/tmp/images
  - export CH_TEST_PERMDIRS='/var/tmp /run'
  - unset JAVA_HOME  # otherwise Spark tries to use host's Java
  - for d in $CH_TEST_PERMDIRS; do
      sudo test/make-perms-test $d $USER nobody;
    done
  - test -n "$CH_BUILDER"  # no default builder for Travis
  - sudo usermod --add-subuids 10000-65536 $USER
  - sudo usermod --add-subgids 10000-65536 $USER
  - if [ "$CH_BUILDER" = ch-grow ]; then
      export SUDO_RM_FIRST=yes;
    fi
  - if [ "$CH_BUILDER" != docker ]; then
      sudo rm $(command -v docker);
    fi

script:
  - test/travis.sh

after_script:
  - free -m
  - df -h
