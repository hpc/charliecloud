dist: xenial
sudo: required
language: c
compiler: gcc

# This defines a "matrix" of jobs. Each combination of environment variables
# defines a different job. They run in parallel, five at a time. We have
# divided the matrix into "stages"; if any stage has a failure, testing stops
# and the remaining stages are skipped. Note that some stages are conditional.
#
# Note: Matrixing of variables that happens at the top level is not supported
# within stages: https://github.com/travis-ci/travis-ci/issues/8295.
#
# We do not do any full-scope tests, because they give a >10-minute gap in
# output, so Travis times out.
#
# FIXME: Each job starts with a cold Docker cache, which wastes work heating
# it up in parallel. It would be nice if "make test-build" could be done
# serially before splitting into parallel jobs.
#
#   TARBALL=              # build in Git checkout
#   TARBALL=archive       # build from "git archive" tarball
#   TARBALL=export        # build from "make export" tarball
#   MAKE_INSTALL=         # run from build directory
#   MAKE_INSTALL=yes      # "make install"; run that one
#
# Note: $INSTALL is used by Autotools, and setting it to "yes" causes very
# weird errors, e.g.:
#
#   make[2]: Entering directory [...]
#    /bin/mkdir -p '/var/tmp/lib/charliecloud'
#    ../yes base.sh '/var/tmp/lib/charliecloud'
#   /bin/bash: line 23: ../yes: No such file or directory
#  Makefile:323: recipe for target 'install-dist_pkglibSCRIPTS' failed
#
# Additional options:
#
#   CH_BUILDER              # which builder to use
#   MINIMAL_CONFIG          # exclude all optional features with --disable-foo
#   MINIMAL_DEPS            # minimal dependencies; implies PACK_FMT=tar
#   PACK_FMT=               # squash pack format, ch-mount/ch-unmount
#   PACK_FMT=squash-unpack  # squash pack format, but unpack instead of mount
#   PACK_FMT=tar            # tarball pack format
#   SUDO_RM_FIRST           # remove sudo before build (implied if non-Docker)
#   SUDO_RM_AFTER_BUILD     # remove sudo after build

# Only run the tests on master or in a pull request. In principle, people
# might start a branch and want Travis on it before it becomes a PR. However,
# in practice, this doesn't happen, and the merge is what really matters.
if: branch = master OR type = pull_request

stages:
  - quick
  - builders
  - install
  - misc

stage_quick: &stage_quick
  stage: quick
stage_builders: &stage_builders
  stage: builders
stage_install: &stage_install
  stage: install
stage_misc: &stage_misc
  stage: misc

jobs:
  include:

    - <<: *stage_quick
      env: CH_BUILDER=docker CH_TEST_SCOPE=quick

    - <<: *stage_builders
      env: CH_BUILDER=none
    - <<: *stage_builders
      env: CH_BUILDER=ch-grow
    - <<: *stage_builders
      env: CH_BUILDER=docker
#    - <<: *stage_builders
#      env: CH_BUILDER=docker          PACK_FMT=squash-unpack
    - <<: *stage_builders
      env: CH_BUILDER=docker          PACK_FMT=tar

    - <<: *stage_install
      env: CH_BUILDER=none            TARBALL=export       MAKE_INSTALL=yes
    - <<: *stage_install
      env: CH_BUILDER=buildah         TARBALL=export       MAKE_INSTALL=yes
    - <<: *stage_install
      env: CH_BUILDER=buildah-runc    TARBALL=export       MAKE_INSTALL=yes
    - <<: *stage_install
      env: CH_BUILDER=ch-grow         TARBALL=export       MAKE_INSTALL=yes
    - <<: *stage_install
      env: CH_BUILDER=docker          TARBALL=export       MAKE_INSTALL=yes

    - <<: *stage_misc
      env: CH_BUILDER=buildah         MINIMAL_DEPS=yes
    - <<: *stage_misc
      env: CH_BUILDER=ch-grow         MINIMAL_DEPS=yes
    - <<: *stage_misc
      env: CH_BUILDER=docker          MINIMAL_DEPS=yes
    - <<: *stage_misc
      env: CH_BUILDER=docker          MINIMAL_CONFIG=yes
    - <<: *stage_misc
      env: CH_BUILDER=docker          SUDO_RM_AFTER_BUILD=yes

addons:
  apt:
    sources:
      - sourceline: 'ppa:projectatomic/ppa'
    packages:
      - autoconf
      - automake
      - bats
      - python3-pip
      - python3-setuptools

install:
  - . test/travis-install.bash  # source b/c we're setting variables

before_script:
  - . test/travis-before.bash

script:
  - test/travis.bash

after_script:
  - free -m
  - df -h
