#!/bin/bash

fatal () {
    printf "error: %s\n" "$1" >&2
    exit 1
}

tag_from_path () {
    parent_dir=$(dirname "$path_")
    basicname=${basename_%%.*}
    extension=${basename_##*.}

    if [[ $extension == "$basicname" ]]; then
        extension=''
    else
        extension=${extension/\./} # remove dot
    fi

    case $basicname in
    Build|Dockerfile)
        if [[ $parent_dir == '' ]]    || \
           [[ $parent_dir == '.' ]]   || \
           [[ $parent_dir == test ]]; then
            if [[ -n $extension ]]; then
                echo "$extension"
            fi
        else
            if [[ -z $extension ]]; then
                echo $(basename "$parent_dir")
            else
                echo $(basename "${parent_dir}-${extension}")
            fi
        fi
    ;;
    *)
        fatal "chtest-make-auto: invalid basic name '$basicname'"
    esac
}

template_print () {
    template="./make-auto.d/$1"

    cat "$template" | sed "s@%(basename)s@$basename_@g" \
                    | sed "s@%(dirname)s@$dirname_@g" \
                    | sed "s@%(path)s@$path_@g" \
                    | sed "s@%(scope)s@$scope@g" \
                    | sed "s@%(tag)s@$tag@g"
    printf '\n'
    return
}

mode=$1; shift
scope=$CH_TEST_SCOPE

if [[ -z $CH_TEST_SCOPE ]]; then
    fatal "CH_TEST_SCOPE not set"
fi

cd ../test

if [[ $mode != tag ]]; then
    printf "# Do not edit this file; it's autogenerated\n\n"
    printf "load %s/common.bash\n\n" $(dirname "${BASH_SOURCE[0]}")
fi

while [[ "$#" -gt 0 ]]; do
    path_=$1;shift
    basename_=$(basename "$path_")
    dirname_=$(dirname "$path_")
    tag=$(tag_from_path)

    if [[ $dir == "" ]];then
        dir='.'
    fi

    if [[ $mode == tag ]]; then
        echo "$tag"
        exit 0
    fi

    if [[ $mode == build ]]; then
        if (echo "$basename_" | grep Build &> /dev/null); then
            template_print 'build_custom.bats.in'
        elif (echo "$basename_" | grep Docker &> /dev/null); then
            template_print 'build.bats.in'
            template_print 'builder_to_archive.bats.in'
        else
            fatal "chtest-make-auto: unknown build type"
        fi
    elif [[ $mode == run ]];then
        template_print 'unpack.bats.in'
        template_print 'run_image.bats.in'
    else
         fatal "chtest-make-auto: invalid mode '$mode'"
    fi
done
