source common.bash  # for ShellCheck; removed by ch-test

@test 'custom build %(tag)s' {
    scope %(scope)s
    out="${ch_tardir}/%(tag)s"
    pq="${ch_tardir}/%(tag)s.pq_missing"
    workdir="${ch_tardir}/%(tag)s.tmp"
    rm -f "$pq"
    mkdir "$workdir"
    cd "%(dirname)s"
    run ./%(basename)s "$PWD" "$out" "$workdir"
    echo "$output"
    if [[ $status -eq 0 ]]; then
        if [[ -f ${out}.tar.gz || -f ${out}.tar.xz ]]; then  # tarball
            # Validate exactly one tarball came out.
            tarballs=( "$out".tar.* )
            [[ ${#tarballs[@]} -eq 1 ]]
            tarball=${tarballs[0]}
            # Convert to SquashFS if needed.
            if [[ $CH_TEST_PACK_FMT = squash* ]]; then
                # With the centos7xz image, we run into permission errors if we
                # try to use the tar “--xattrs-include” option. Using strace(1),
                # we determined that with the xattrs option specified, tar first
                # calls mknodat(2) to create a file with permissions 000, then
                # openat(2) on the same file, which fails with EACCESS. Without
                # the xattrs option, the file is created by a call to openat(2)
                # with the O_CREAT flag (rather than mknodat(2)), so the
                # permission error is avoided. (See
                # https://savannah.gnu.org/support/index.php?110903).
                if [[ $tarball = *centos7xz* ]]; then
                    xattrs_arg=
                else
                    xattrs_arg=--xattrs
                fi
                ch-convert $xattrs_arg "$tarball" "${tarball/tar.?z/sqfs}"
                rm "$tarball"
            fi
        elif [[ -d $out ]]; then                             # directory
            case $CH_TEST_PACK_FMT in
                squash-*)
                    ext=sqsh
                    ;;
                tar-unpack)
                    ext=tar.gz
                    ;;
                *)
                    false  # unknown format
                    ;;
            esac
            ch-convert "$out" "${out}.${ext}"
        else
            false  # unknown format
        fi
    fi
    rm -Rf --one-file-system "$out" "$workdir"
    if [[ $status -eq 65 ]]; then
        touch "$pq"
        rm -Rf --one-file-system "$out".tar.{gz,xz}
        skip 'prerequisites not met'
    else
        return "$status"
    fi
}
