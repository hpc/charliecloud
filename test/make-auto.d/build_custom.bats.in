@test 'custom build %(tag)s' {
    scope %(scope)s
    out="${ch_tardir}/%(tag)s"
    pq="${ch_tardir}/%(tag)s.pq_missing"
    workdir="${ch_tardir}/%(tag)s.tmp"
    rm -f "$pq"
    mkdir "$workdir"
    cd "%(dirname)s"
    run ./%(basename)s "$PWD" "$out" "$workdir"
    echo "$output"
    # Pack image into appropriate format.
    if [[ -f ${out}.tar.gz || -f ${out}.tar.xz ]]; then
        tarballs=( "$out".tar.* )
        [[ ${#tarballs[@]} -eq 1 ]]  # fail if both extensions were provided
        tarball=${tarballs[0]}
        if [[ $CH_PACK_FMT = squash ]]; then
            # Tarball provided but pack format is SquashFS; repack.
            ch-tar2dir "$tarball" "$workdir"
            ch-dir2squash "${workdir}/%(tag)s" "$ch_tardir"
            rm "$tarball"
        fi
    elif [[ -d $out ]]; then
        if [[ $CH_PACK_FMT = tar ]]; then
            ( cd "$out" && tar czf "${out}.tar.gz" -- * )
        elif [[ $CH_PACK_FMT = squash ]]; then
            ch-dir2squash "$out" "$ch_tardir"
        else
            false  # unknown pack format
        fi
        rm -Rf --one-file-system "$out"
    else
        [[ $status -ne 0 ]]  # no tarball or directory; script should fail
    fi
    # Clean up.
    rm -Rf --one-file-system "$workdir"
    if [[ $status -eq 65 ]]; then
         touch "$pq"
         rm -Rf --one-file-system "$out" "$out".tar.{gz,xz}
         skip 'prerequisites not met'
    fi
    [[ $status -eq 0 ]]
}
